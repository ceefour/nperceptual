h1. nperceptual

Finger points and gesture recognition library for
Microsoft .NET Framework using "Intel Perceptual SDK":http://software.intel.com/en-us/vcsource/tools/perceptual-computing-sdk .

h2. Dependencies (Managed via NuGet)

* "log4net":http://www.nuget.org/packages/log4net

h2. Usage

The main entry point of the library is the @PerceptualManager@ class.

Sample code to display "perceptual cursor" using any WPF Shape/Component,
with hand open-close ("grab") gesture detection.

bc.. private readonly PerceptualManager perceptualMgr;

public MainWindow()
{
    InitializeComponent();
    perceptualMgr = new PerceptualManager(this.Dispatcher);
    InitPerceptual();
}

private void InitPerceptual()
{
    perceptualMgr.Init();
    perceptualMgr.Start();
    perceptualMgr.PrimaryMove = Perceptual_PrimaryMove;
    perceptualMgr.PrimaryClose = Perceptual_PrimaryClose;
    perceptualMgr.PrimaryOpen = Perceptual_PrimaryOpen;
}

private void Perceptual_PrimaryOpen(PerceptualManager sender, HandEventArgs e)
{
    hand.Fill = new SolidColorBrush(Color.FromRgb(0x90, 0x90, 0x90));
}

private void Perceptual_PrimaryClose(PerceptualManager sender, HandEventArgs e)
{
    hand.Fill = new SolidColorBrush(Color.FromRgb(0xff, 0x33, 0));
}

private void Perceptual_PrimaryMove(PerceptualManager sender, HandEventArgs e)
{
    hand.Margin = new Thickness(
        (-hand.ActualWidth / 2) + e.Left * ActualWidth,
        (-hand.ActualHeight / 2) + e.Top * ActualHeight,
        0, 0);
}

private void Window_Unloaded(object sender, RoutedEventArgs e)
{
    perceptualMgr.Dispose();
}

private void Window_Closed(object sender, EventArgs e)
{
    perceptualMgr.Dispose();
}
